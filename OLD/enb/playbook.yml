---
- hosts: default

  tasks:
    - name: apt-get update
      apt:
        update_cache: yes
        cache_valid_time: 3600
      become: yes

# STEP ONE: WE'RE COMPILING A KERNEL MODULE SO WE HAVE TO GET THE RIGHT HEADERS/SOURCES

    - name: fetch kernel sources and headers
      block:
        - apt: name=linux-headers-3.13.0-32-generic
        # - apt: name=linux-source
        # - ln: /lib/modules/UNAME/build /usr/src/SOURCE/
        - file:
            src: /usr/src/linux-headers-3.13.0-32-generic/include/generated/autoconf.h
            dest: /lib/modules/3.13.0-32-generic/build/include/linux/autoconf.h
            state: link
      become: yes

# STEP TWO: A TON OF APT-GETS THAT WE NEED FOR SOFTWARE CHECKOUT/BUILD
    - name: apt-get installs
      apt:
        name: "{{ item }}"
      with_items:
      - software-properties-common
      - libtasn1-3-dev
      - autoconf
      - automake
      - bison
      - build-essential
      - cmake
      - cmake-curses-gui
      - doxygen
      - doxygen-gui
      - texlive-latex-base
      - ethtool
      - flex
      - gccxml
      - gdb
      - git
      - graphviz
      - nettle-dev
      - nettle-bin
      - libgnutls-dev
      - gtkwave
      - guile-2.0-dev
      - iperf
      - iproute
      - iptables
      - iptables-dev
      - libatlas-base-dev
      - libatlas-dev
      - libblas-dev
      - libconfig8-dev
      - libffi-dev
      - libforms-bin
      - libforms-dev
      - libgcrypt11-dev
      - libgmp-dev
      - libgtk-3-dev
      - libidn2-0-dev
      - libidn11-dev
      - libmysqlclient-dev
      - liboctave-dev
      - libpgm-dev
      - libpython2.7-dev
      - libsctp1
      - libsctp-dev
      - libssl-dev
      - libtool
      - libusb-1.0-0-dev
      - libxml2
      - libxml2-dev
      - libxslt1-dev
      - mscgen
      - octave
      - octave-signal
      - openssh-client
      - openssh-server
      - openssl
      - python
      - subversion
      - xmlstarlet
      - python-pip
      - pydb
      - libyaml-dev
      - wget
      - libxpm-dev
      become: yes

    - name: update-alternatives
      shell: update-alternatives --set liblapack.so /usr/lib/atlas-base/atlas/liblapack.so
      become: yes

    - import_tasks: asn1c.yml

# STEP THREE: DOWNLOAD/BUILD UHD DRIVERS FROM SOURCE
    - name: apt-get installs
      apt:
        name: "{{ item }}"
      with_items:
      - libboost-all-dev
      - libusb-1.0-0-dev
      - python-mako
      - doxygen
      - python-docutils
      - python-requests
      - cmake
      - build-essential
      become: yes

    - name: fetch uhd source from github
      git:
        repo: https://github.com/EttusResearch/uhd.git
        dest: /home/vagrant/uhd

    - name: build/install uhd
      shell: |
        mkdir host/build
        cd host/build
        cmake -DCMAKE_INSTALL_PREFIX=/usr ..
        make
        make install
        ldconfig
        /usr/lib/uhd/utils/uhd_images_downloader.py
      args:
        chdir: /home/vagrant/enb
      become: yes


# STEP FOUR: DOWNLOAD/BUILD THE SOURCE
    - name: fetch enb source from github
      git:
        repo: https://github.com/spencersevilla/dolte-enb.git
        dest: /home/vagrant/enb

    - name: build ACTUAL enb (for USRP)
      shell: |
        ./cmake_targets/build_oai -c -w USRP --eNB --UE
      args:
        chdir: /home/vagrant/enb

# STEP FIVE: INSTALL LOWLATENCY KERNEL?!?!?!?!?

# STEP SIX: ANY FINAL CONFIGS???

# To run: sudo -E ./cmake_targets/lte_build_oai/build/lte-softmodem -O ./spencer_configs/enb.10MHz.b200

